----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: "2021-03-03T20:50:52.923237821+03:00"
from:
  id-type: crev
  id: kQ1fVKX-nZhluPcz1Wj7PGsAgUe7sEeNXPCi0qDJQCw
  url: "https://github.com/Minoru/crev-proofs.git"
package:
  source: "https://crates.io"
  name: gettext-sys
  version: 0.21.0
  revision: 78b75bc82d45493b9a66ec5429fa9451daf324fa
  digest: M1n8cJSsg4_V5YBywZoqYduJgvRQuMxwpgu1ZV22zWI
review:
  thoroughness: high
  understanding: high
  rating: strong
comment: |-
  This is basically a self-review, since it's me who fixed the problems
  I highlighted in my previous review.
  
  The crate now bundles an up-to-date version of GNU gettext, which is nice.
  
  The documentation now features a prominent warning about the bundled
  library's license, LGPL.
  
  This release added one new binding and some workarounds for build issues. All
  of that looks good to me (but remember that I'm the author of those changes).
  
  The crate is now even more solid than before.
----- SIGN CREV PROOF -----
o1PAIHYmzkUByiSIk-WoTPgcUWd3EKDNmcMjVOnLQvVgphh1k8Q4n8OvslfZWR8Fd2GX6AOLHvSSzbr77regBw
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: "2021-03-03T20:55:13.710248388+03:00"
from:
  id-type: crev
  id: kQ1fVKX-nZhluPcz1Wj7PGsAgUe7sEeNXPCi0qDJQCw
  url: "https://github.com/Minoru/crev-proofs.git"
package:
  source: "https://crates.io"
  name: gettext-rs
  version: 0.6.0
  revision: bc6b043ba9a64acb11564c22a5dcc318bd74accc
  digest: cOvjfD2qdO5iIFQUfK4TytnaQhjsN_4IRKHpeBTbbns
review:
  thoroughness: high
  understanding: high
  rating: strong
comment: |-
  This is basically a self-review, since it's me who fixed the problems
  I highlighted in my previous review.
  
  This crate contains safe FFI bindings for gettext.
  
  The memory issues I mentioned in the previous review are fixed, and panics
  documented. There are no `unwrap`s, and all errors are propagated via
  `Result`s.
  
  The crate still depends on gettext returning UTF-8, but this is now
  prominently documented.
  
  Compared to 0.5.0, the API is more fleshed out and polished (even if I say so
  myself).
----- SIGN CREV PROOF -----
skSsOLAZeXoCiX65cNhvmjTu3y9XPxvTVFX1laAbhsYRLUm6ThVry2gCMx1E8ltm5L0ukjYxAA3xXqY5wjt4BA
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: "2021-03-04T02:39:38.622368966+03:00"
from:
  id-type: crev
  id: kQ1fVKX-nZhluPcz1Wj7PGsAgUe7sEeNXPCi0qDJQCw
  url: "https://github.com/Minoru/crev-proofs.git"
package:
  source: "https://crates.io"
  name: remove_dir_all
  version: 0.5.3
  revision: 0c218dad77262fbf47483d128feebb2770a8c05e
  digest: ltL2xkeGeGdvI4bRC3Zf47MxRRRpS83d4GERoSl4544
review:
  thoroughness: low
  understanding: low
  rating: positive
comment: |-
  I'm not a Windows programmer; I merely took a peek to see if the crate is
  blatantly malicious, and it looks like it isn't.
  
  The code is well-commented. Uses `unsafe` sparingly, just to call WinAPI — no
  high-performance tricks. Some comments refer to alignment issues, which shows
  the amount of thought that went into the code; nice.
----- SIGN CREV PROOF -----
uEpkGiMdYOMPFiexcB1srwdsE1ox2XnBNgEoXdGbCH4fHisX4kFvbzlF816_WlyVLo05-u2OxtksACfMdpAdDg
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: "2021-03-11T01:27:56.626442349+03:00"
from:
  id-type: crev
  id: kQ1fVKX-nZhluPcz1Wj7PGsAgUe7sEeNXPCi0qDJQCw
  url: "https://github.com/Minoru/crev-proofs.git"
package:
  source: "https://crates.io"
  name: scratch
  version: 1.0.0
  revision: d9b7679377951ec21ec9a52da466e89f04a9deaf
  digest: f4HBOJc2rdzbFa3tVrL2oapoPR5jZlOfHflgkFWC8fk
review:
  thoroughness: high
  understanding: high
  rating: strong
comment: |-
  Trivial (but useful!) crate that creates a temporary directory which can be
  seen by any crate that depends on this one.
  
  There are just 6 lines of actual code here. They read OUT_DIR from
  environment, and create/remove some directories.
  
  A rogue crate could include this one and use it to stomp on some other
  crate's scratch space. It's hard for me to see this as a vulnerability, since
  the user is supposed to trust the code they're running during the build.
----- SIGN CREV PROOF -----
_4FPKgLBTZENocbSMP68DkKgWRaE60yS2l3Ht6DJYsvYmQGUFYa1ok3bHRTZiQ3GHxeb13mJKbgRCeQFbgdQCg
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: "2021-03-11T01:40:25.433021751+03:00"
from:
  id-type: crev
  id: kQ1fVKX-nZhluPcz1Wj7PGsAgUe7sEeNXPCi0qDJQCw
  url: "https://github.com/Minoru/crev-proofs.git"
package:
  source: "https://crates.io"
  name: winapi-i686-pc-windows-gnu
  version: 0.4.0
  digest: 8BsjRXHqrrNVolIuivkuUQwrFendQmVRDZihn1P-1t4
review:
  thoroughness: low
  understanding: high
  rating: positive
comment: |-
  This crate vendors various WinAPI libraries for i686. All it does is add
  a library search path to Cargo, pointing at a directory full of .a files
  (static libraries).
  
  I didn't actually verify where the libraries come from, and if they match
  their origin; that's why I cap thoroughness at "low", and rating at
  "positive".
----- SIGN CREV PROOF -----
hSxCYQXdXgsywl1n276amam5FyeWur1nZ4enqlvwqoFSeuqJIjao6BFeZD4OWtf0QTTuAlbvlFzx0cLSuV7ADw
----- END CREV PROOF -----

