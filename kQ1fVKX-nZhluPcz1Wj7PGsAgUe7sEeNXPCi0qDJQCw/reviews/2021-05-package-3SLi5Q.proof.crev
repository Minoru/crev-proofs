----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: "2021-05-01T19:30:33.407054671+03:00"
from:
  id-type: crev
  id: kQ1fVKX-nZhluPcz1Wj7PGsAgUe7sEeNXPCi0qDJQCw
  url: "https://github.com/Minoru/crev-proofs.git"
package:
  source: "https://crates.io"
  name: wait-timeout
  version: 0.2.0
  revision: 7bb31d4901baa5196bd554e9e332bd9534eeb93b
  digest: X0fv2iEYJul7e68zMn3i1nP_17UeZthDO4IX35zRhAE
review:
  thoroughness: medium
  understanding: medium
  rating: positive
comment: |-
  The crate implements a seemingly trivial thing: waiting for a child process
  to finish, with a timeout.
  
  On Windows, this boils down to a single WinAPI call. I don't know much about
  Windows, but the code looks okay to me. There is a minor issue of timeouts
  being capped at ≈49 days, which I reported:
  https://github.com/alexcrichton/wait-timeout/issues/23
  
  On Unix, the algorithm is much more involved. I understand it, and I believe
  it to be correct.
  
  The crate calls into libc and WinAPI, so there are a bit of `unsafe` in here.
  But it all looks all right to me.
----- SIGN CREV PROOF -----
8d16o2DS7ixSj17LRf53Q_3pBMNdHEeF9GZcD6kTVixsL8SmdyQmknSzWLLOVJG-VsOD6-UBxWqZL_XJz9kPAw
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: "2021-05-01T21:21:54.359889709+03:00"
from:
  id-type: crev
  id: kQ1fVKX-nZhluPcz1Wj7PGsAgUe7sEeNXPCi0qDJQCw
  url: "https://github.com/Minoru/crev-proofs.git"
package:
  source: "https://crates.io"
  name: form_urlencoded
  version: 1.0.1
  revision: ea7a69e9d69248ca6f69a6294abed225754f92fe
  digest: mzkjLTN9N_VAknFTYHrxK_pf7Zu3kLz-l4gIAyfBavQ
review:
  thoroughness: medium
  understanding: low
  rating: positive
comment: |-
  The crate encodes and decodes parameters of web forms.
  
  I verified that the decoding algorithm matches the spec. The encoding is more
  involved, so I didn't verify that. Notably, the crate has no tests, so I only
  trust to it be correct because it's written by the Servo team.
  
  There are two uses of `unsafe`, for performance (avoiding UTF-8 checks). Both
  have comments explaining why they're okay, and they sound convincing enough.
----- SIGN CREV PROOF -----
P2h-RLoEJ3aAF251Yv2iEQ8BBZbrPJjkHqckU3G4rTeU9EptnDAJkNDIdpBThe2ID5XLQmCYreRV83PPENRmAQ
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: "2021-05-01T21:38:49.101311519+03:00"
from:
  id-type: crev
  id: kQ1fVKX-nZhluPcz1Wj7PGsAgUe7sEeNXPCi0qDJQCw
  url: "https://github.com/Minoru/crev-proofs.git"
package:
  source: "https://crates.io"
  name: version_check
  version: 0.9.3
  revision: 11875244ee2afacf47218e8f2e322a39d61dc5df
  digest: FTNDtbLO_Iu-8IzvVk27NY4XrSWUnBLFMtYu-yvvXzU
review:
  thoroughness: low
  understanding: medium
  rating: positive
comment: |-
  Runs `rustc --verbose --version` and parses the result. The binary to run can
  be overridden via an environment variable `RUSTC`, which I do not consider as
  a security risk since it's done at build time.
  
  There is no `unsafe`, and the code itself is mostly string mangling, so
  I think this crate is okay.
----- SIGN CREV PROOF -----
rp_xIfjwhbLfPpW-Q504Qi3e_TRR9aqi46_SUZaT8SsL5Dbo3yxcJagWuw9vDl6mxhw5z4oHbuL0xZ7zPdg-CQ
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: "2021-05-01T21:46:13.505879843+03:00"
from:
  id-type: crev
  id: kQ1fVKX-nZhluPcz1Wj7PGsAgUe7sEeNXPCi0qDJQCw
  url: "https://github.com/Minoru/crev-proofs.git"
package:
  source: "https://crates.io"
  name: rand_hc
  version: 0.3.0
  revision: 98e220c30234370fb04ba928799ebd9727fc049a
  digest: LegMVL7a46xXLp3Y7JJXFSJamt8pJYh0fpnzD3ZXrD0
review:
  thoroughness: low
  understanding: none
  rating: neutral
comment: |-
  This is an implementation of an HC-128 RNG.
  
  The crate has no `unsafe`, and doesn't seem to do anything obviously fishy.
  I didn't compare the algorithm to the relevant paper though, so I don't vouch
  this is a faithful implementation.
----- SIGN CREV PROOF -----
utonGwsahBdJ7jWkaAKRFZ8wgyyLF4hskjmXVzzvRr5iL0bO8sGlv-T302jxv3kSMad8jgZGjjGs-_rsgXbQDA
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: "2021-05-28T17:20:26.550518199+03:00"
from:
  id-type: crev
  id: kQ1fVKX-nZhluPcz1Wj7PGsAgUe7sEeNXPCi0qDJQCw
  url: "https://github.com/Minoru/crev-proofs.git"
package:
  source: "https://crates.io"
  name: libc
  version: 0.2.95
  revision: e25b7f3d9daab50872f1964b375b492d91085734
  digest: Ji8ULQZr3h0k6Bp0Lt3MRGtJP7Gr46046U62qlLIO2I
package-diff-base:
  source: "https://crates.io"
  name: libc
  version: 0.2.94
  revision: 50af40e2776fa3573bdf8071a3fe98cea41206da
  digest: "-6MoxTjTCuJ6m8VuvNHgzgWzFtQdzZvwfwGykkAyVjY"
review:
  thoroughness: low
  understanding: medium
  rating: positive
comment: |-
  Delta from 0.2.94 reveals nothing unusual: add new bindings, add new
  constants, move some code around, and undo a macOS-related hack that
  I committed earlier. Some FIXMEs were added too, but their comments don't
  sound urgent.
  
  This looks fine. "Thoroughness" for this review is "low" because I didn't
  manually check that the bindings match the headers — I trust that the CI
  checked that already.
----- SIGN CREV PROOF -----
r760cv9hWnJxu4gtxEpyoy8sGwUsmxYyl8oQUcG2BirmrsqSNl2NbAmVlm18ZER6jXsGEqnuRjS2a9XGMPbFBw
----- END CREV PROOF -----

